<?xml version="1.0" encoding="us-ascii"?>
<Catalog>
    <CValidatorLocationEnumArea default="1" id="HostileSearch"/>
    <CValidatorLocationEnumArea default="1" id="HostileSearchEmpty" parent="HostileSearch">
        <Compare value="Eq"/>
        <Count value="0"/>
    </CValidatorLocationEnumArea>
    <CValidatorUnitCompareAttackPriority default="1" id="ThreatensUnit"/>
    <CValidatorFunction default="1" id="TacticalBurrowSharedDown">
        <Line Failure="CasterForceUnburrow"/>
        <Line Ignored="TacticalBurrowHostileSearchEmpty"/>
        <Line Failure="TacticalBurrow##unitLink##ThreatTest"/>
        <Line Success="TacticalBurrowMeleeHighDiffucltyNoHostiles"/>
        <Line Failure="CasterSuggestUnburrow"/>
        <Line Failure="TacticalBurrowCasterDetected"/>
        <Line Success="CasterSuggestBurrow"/>
        <Line Success="TacticalBurrow##unitLink##CampaignNoHostilesBullyBurrow"/>
        <Line Failure="CasterCampaign"/>
        <Line Failure="CasterDifficultyLT3"/>
        <Line Failure="CasterLifeGT##maxVitals##Percent"/>
        <Line Failure="CasterLifeLT##minVitals##Percent"/>
        <Line Failure="TacticalBurrowLifeTest"/>
    </CValidatorFunction>
    <CValidatorFunction default="1" id="TacticalBurrowSharedUp">
        <Line Success="CasterForceUnburrow"/>
        <Line Ignored="TacticalBurrowHostileSearchEmpty"/>
        <Line Success="TacticalBurrow##unitLink##ThreatTest"/>
        <Line Failure="TacticalBurrowMeleeHighDiffucltyNoHostiles"/>
        <Line Success="CasterSuggestUnburrow"/>
        <Line Success="TacticalBurrowNoCampaignCasterDetected"/>
        <Line Failure="CasterSuggestBurrow"/>
        <Line Success="TacticalBurrow##unitLink##CampaignBullyUnburrow"/>
        <Line Success="TacticalBurrowCampaignHostiles"/>
        <Line Failure="CasterCampaign"/>
        <Line Success="CasterDifficultyLT3"/>
        <Line Failure="CasterLifeLT##maxVitals##Percent"/>
    </CValidatorFunction>
    <CValidatorCombine default="1" id="TacticalBurrowThreatTest">
        <CombineArray value="CasterWantsToMoveOrHasOrders"/>
        <CombineArray value="TacticalBurrow##unitLink##ThreatSearchEmpty"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea default="1" id="TacticalBurrowSearchEmpty" parent="HostileSearchEmpty">
        <CachedSearch value="TacticalBurrow"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea default="1" id="TacticalBurrowThreatSearchEmpty" parent="TacticalBurrowSearchEmpty">
        <AreaArray Radius="8" Validator="Threatens##unitLink##"/>
    </CValidatorLocationEnumArea>
    <CValidatorUnitType default="1" id="TacticalBurrowBullyTest"/>
    <!--
    
    Shared Cloaking
    
    if  recently attacked AND
        there are enemies AND
        they have no visible detectors AND
        ((life < threshold) OR
         (energy > threshold))
         
         cloak
         
    if  no visible enemies OR
        they have a visible detector OR
        ((not attacked recently) AND
         (life > threshold) AND
         (energy < threshold))
         
         decloak
    
    -->
    <CValidatorUnitCompareAttackPriority default="1" id="UnitThreatens"/>
    <CValidatorCombine default="1" id="TacticalCloakSharedOn">
        <CombineArray value="CasterNotCampaign"/>
        <CombineArray value="Tactical##unitLink##CloakThreatSearch"/>
    </CValidatorCombine>
    <CValidatorCombine default="1" id="TacticalCloakSharedOff">
        <CombineArray value="CasterNotCampaign"/>
        <CombineArray value="Tactical##unitLink##CloakThreatSearchEmpty"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea default="1" id="TacticalCloakThreatSearchEmpty" parent="HostileSearchEmpty">
        <AreaArray Radius="12" Validator="UnitThreatens##unitLink##"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea default="1" id="TacticalCloakThreatSearch" parent="HostileSearch">
        <AreaArray Radius="12" Validator="UnitThreatens##unitLink##"/>
    </CValidatorLocationEnumArea>
    <CValidatorCombine default="1" id="TacticalBurrowCampaignNoHostilesBullyBurrow">
        <CombineArray value="CasterCampaign"/>
        <CombineArray value="TacticalBurrowHostileSearchEmpty"/>
        <CombineArray value="TacticalBurrow##unitLink##BullyTest"/>
    </CValidatorCombine>
    <CValidatorCombine default="1" id="TacticalBurrowCampaignBullyUnburrow">
        <CombineArray value="CasterCampaign"/>
        <CombineArray value="TacticalBurrow##unitLink##BullyTest"/>
    </CValidatorCombine>
    <CValidatorCombine id="250mmCannonValidators">
        <CombineArray value="NotInvulnerable"/>
        <CombineArray value="NotGravitonBeamd"/>
        <CombineArray value="NotDead"/>
        <CombineArray value="TargetIsVisible"/>
        <CombineArray value="NotFlyingTerranBuilding"/>
    </CValidatorCombine>
    <CValidatorUnitWeaponAnimating id="CasterIsAnimatingWeapon"/>
    <CValidatorUnitWeaponFiring id="CasterIsFiringWeapon"/>
    <CValidatorUnitOrderQueue id="CasterNotAttacking"/>
    <CValidatorCombine id="CasterNotFiringOrAnimatingWeapon">
        <CombineArray value="CasterIsAnimatingWeapon"/>
        <CombineArray value="CasterIsFiringWeapon"/>
    </CValidatorCombine>
    <CValidatorUnitOrderQueue id="CasterNotHoldingPosition"/>
    <CValidatorUnitCompareVital id="CasterShieldsGE1"/>
    <CValidatorUnitCompareOrderTargetRange id="ChargeMinTriggerDistance"/>
    <CValidatorUnitCompareBehaviorCount id="DoubleDamage"/>
    <CValidatorUnitType id="CasterIsCommandCenter"/>
    <CValidatorUnitType id="CasterIsColossus"/>
    <CValidatorUnitCompareBehaviorCount id="GhostHoldingFire"/>
    <CValidatorUnitCompareBehaviorCount id="GhostNotHoldingFire"/>
    <CValidatorUnitCompareOrderCount id="LairNotMorphing"/>
    <CValidatorCombine id="NeuralParasitePeriodicValidator">
        <CombineArray value="NotHidden"/>
        <CombineArray value="CasterHasEnergyAndNotDead"/>
        <CombineArray value="NotFrenzied"/>
    </CValidatorCombine>
    <CValidatorUnitCompareBehaviorCount id="NotContaminated"/>
    <CValidatorUnitCompareBehaviorCount id="NotDoubleDamage"/>
    <CValidatorUnitFilters id="IsHidden"/>
    <CValidatorUnitType id="NotFlyingBarracks"/>
    <CValidatorUnitType id="NotFlyingOrbitalCommand"/>
    <CValidatorUnitType id="NotFlyingFactory"/>
    <CValidatorUnitType id="NotFlyingStarport"/>
    <CValidatorUnitType id="NotFlyingCommandCenter"/>
    <CValidatorCombine id="NotFlyingTerranBuilding">
        <CombineArray value="NotFlyingStarport"/>
        <CombineArray value="NotFlyingBarracks"/>
        <CombineArray value="NotFlyingCommandCenter"/>
        <CombineArray value="NotFlyingFactory"/>
        <CombineArray value="NotFlyingOrbitalCommand"/>
    </CValidatorCombine>
    <CValidatorUnitFilters id="NotInvulnerable"/>
    <CValidatorUnitType id="NotLarva"/>
    <CValidatorUnitFilters id="NotUncommandable"/>
    <CValidatorUnitCompareBehaviorCount id="NotLeechd"/>
    <CValidatorUnitType id="NotSpineCrawlerUprooted"/>
    <CValidatorUnitType id="NotSporeCrawlerUprooted"/>
    <CValidatorPlayerRequirement id="HasObverseIncubation"/>
    <CValidatorUnitType id="NotWorkerDrone"/>
    <CValidatorCombine id="NotQuadAndNotDoubleDamage">
        <CombineArray value="NotDoubleDamage"/>
        <CombineArray value="NotQuadDamage"/>
    </CValidatorCombine>
    <CValidatorUnitType id="IsSCV"/>
    <CValidatorUnitType id="NotWorkerSCV"/>
    <CValidatorUnitType id="NotWorkerProbe"/>
    <CValidatorUnitType id="NotWorkerMULE"/>
    <CValidatorCombine id="NotWorkerAndNotCloaked">
        <CombineArray value="NotCloaked"/>
        <CombineArray value="NotWorkerDrone"/>
        <CombineArray value="NotWorkerMULE"/>
        <CombineArray value="NotWorkerProbe"/>
        <CombineArray value="NotWorkerSCV"/>
    </CValidatorCombine>
    <CValidatorCombine id="NotWorkerAndNotCloakedAndNotDead">
        <CombineArray value="NotCloaked"/>
        <CombineArray value="NotWorkerDrone"/>
        <CombineArray value="NotWorkerMULE"/>
        <CombineArray value="NotWorkerProbe"/>
        <CombineArray value="NotWorkerSCV"/>
        <CombineArray value="NotDead"/>
    </CValidatorCombine>
    <CValidatorUnitCompareBehaviorCount id="QuadDamage"/>
    <CValidatorCombine id="QuadOrDoubleDamage">
        <CombineArray value="QuadDamage"/>
        <CombineArray value="DoubleDamage"/>
    </CValidatorCombine>
    <CValidatorCombine id="CasterIsUnpoweredAndNotUnderConstruction">
        <CombineArray value="HasNoPower"/>
        <CombineArray value="IsNotConstructing"/>
    </CValidatorCombine>
    <CValidatorUnitComparePowerUserLevel id="HasNoPower"/>
    <CValidatorUnitCompareVital id="LifeGEOneQuarter"/>
    <CValidatorUnitCompareVital id="LifeGEThreeQuarter"/>
    <CValidatorUnitCompareVital id="LifeLTOneQuarter"/>
    <CValidatorUnitCompareVital id="LifeLTThreeQuarter"/>
    <CValidatorUnitCompareResourceContents id="NoVespene"/>
    <CValidatorUnitCompareResourceContents id="HasVespene"/>
    <CValidatorCombine id="ProtossBurnDownFire">
        <CombineArray value="ShieldLQuarter"/>
        <CombineArray value="LifeLTThreeQuarter"/>
        <CombineArray value="ProtossBurnDownValid"/>
    </CValidatorCombine>
    <CValidatorUnitCompareBehaviorCount id="NotQuadDamage"/>
    <CValidatorUnitCompareVital id="ShieldGEQuarter"/>
    <CValidatorCombine id="ProtossBurnDownNormal">
        <CombineArray value="ShieldGEQuarter"/>
        <CombineArray value="ProtossBurnDownValid"/>
    </CValidatorCombine>
    <CValidatorUnitFilters id="ProtossBurnDownValid"/>
    <CValidatorCombine id="CliffLevelGreaterOrAir">
        <CombineArray value="TargetAttacksAir"/>
        <CombineArray value="CliffLevelGreater"/>
    </CValidatorCombine>
    <CValidatorUnitCompareDeath id="DeathByFire"/>
    <CValidatorUnitCompareDeath id="DeathByEviscerate"/>
    <CValidatorUnitCompareDeath id="DeathByAcid"/>
    <CValidatorUnitCompareDeath id="DeathByBlast"/>
    <CValidatorUnitType id="IsBarracksTechLab"/>
    <CValidatorUnitType id="IsLarva"/>
    <CValidatorUnitType id="IsFactoryTechLab"/>
    <CValidatorUnitType id="IsStarportTechLab"/>
    <CValidatorUnitType id="IsEngineeringBay"/>
    <CValidatorUnitType id="IsMercCompound"/>
    <CValidatorUnitType id="IsGhostAcademy"/>
    <CValidatorUnitType id="IsArmory"/>
    <CValidatorUnitType id="IsFusionCore"/>
    <CValidatorUnitType id="IsInfestationPit"/>
    <CValidatorUnitType id="IsSpawningPool"/>
    <CValidatorUnitType id="IsEvolutionChamber"/>
    <CValidatorUnitType id="IsHydraliskDen"/>
    <CValidatorUnitType id="IsBanelingNest"/>
    <CValidatorUnitType id="IsRoachWarren"/>
    <CValidatorUnitType id="IsLurkerDen"/>
    <CValidatorUnitCompareBehaviorCount id="IsSupplyDepotMorphing"/>
    <CValidatorUnitType id="IsUltraliskCavern"/>
    <CValidatorUnitType id="NotSpire"/>
    <CValidatorUnitType id="NotGreaterSpire"/>
    <CValidatorUnitType id="NotMissileTurret"/>
    <CValidatorUnitType id="NotGhostAcademy"/>
    <CValidatorUnitType id="NotBanelingNest"/>
    <CValidatorCombine id="IsSpireOrGreaterSpire">
        <CombineArray value="IsGreaterSpire"/>
        <CombineArray value="IsSpire"/>
    </CValidatorCombine>
    <CValidatorUnitType id="IsMissileTurret"/>
    <CValidatorUnitType id="IsSpire"/>
    <CValidatorUnitType id="IsGreaterSpire"/>
    <CValidatorUnitType id="IsBarracks"/>
    <CValidatorUnitType id="IsStarport"/>
    <CValidatorUnitType id="IsFactory"/>
    <CValidatorUnitType id="IsCommandCenter"/>
    <CValidatorCombine id="IsCasterCommandCenterOrPlanetaryFortress">
        <CombineArray value="IsCasterCommandCenter"/>
        <CombineArray value="IsCasterPlanetaryFortress"/>
    </CValidatorCombine>
    <CValidatorUnitType id="IsCasterCommandCenter"/>
    <CValidatorUnitType id="IsCasterPlanetaryFortress"/>
    <CValidatorUnitType id="IsCommandCenterFlying"/>
    <CValidatorUnitType id="IsOrbitalCommand"/>
    <CValidatorUnitType id="IsPlanetaryFortress"/>
    <CValidatorUnitType id="IsNexus"/>
    <CValidatorUnitType id="IsFleetBeacon"/>
    <CValidatorUnitType id="IsTwilightCouncil"/>
    <CValidatorUnitType id="IsCyberneticsCore"/>
    <CValidatorUnitType id="IsForge"/>
    <CValidatorUnitType id="IsRoboticsBay"/>
    <CValidatorUnitType id="IsTemplarArchives"/>
    <CValidatorUnitType id="IsRoboticsFacility"/>
    <CValidatorUnitType id="IsStarGate"/>
    <CValidatorUnitCompareBehaviorCount id="IsNotFungalGrowthRooted"/>
    <CValidatorUnitCompareBehaviorCount id="IsNotFungalGrowthSnared"/>
    <CValidatorCombine id="IsNotFungalGrowthed">
        <CombineArray value="IsNotFungalGrowthSnared"/>
        <CombineArray value="IsNotFungalGrowthRooted"/>
    </CValidatorCombine>
    <CValidatorUnitType id="IsEgg"/>
    <CValidatorLocationEnumArea id="NoEnemiesNearby">
        <AreaArray Count="0" Radius="6"/>
    </CValidatorLocationEnumArea>
    <CValidatorUnitCompareBehaviorCount id="HasDetector10"/>
    <CValidatorUnitCompareBehaviorCount id="HasDetector11"/>
    <CValidatorUnitCompareBehaviorCount id="HasDetector12"/>
    <CValidatorUnitType id="IsNotWarpBubble"/>
    <CValidatorLocationEnumArea id="EnemiesNearby">
        <AreaArray Compare="GT" Count="1" Radius="6"/>
    </CValidatorLocationEnumArea>
    <CValidatorUnitCompareResourceHarvesters id="NoWarpBubbleHighYield"/>
    <CValidatorUnitCompareResourceHarvesters id="NoWarpBubbleMinerals"/>
    <CValidatorUnitCompareBehaviorCount id="NotCorruptioned"/>
    <CValidatorUnitFilters id="NotHidden"/>
    <CValidatorUnitFilters id="SourceNotHidden"/>
    <CValidatorUnitCompareBehaviorCount id="NotWarpingIn"/>
    <CValidatorPlayerRequirement id="PunisherGrenadesResearched">
        <Value value="UsePunisherGrenades"/>
    </CValidatorPlayerRequirement>
    <CValidatorUnitCompareField id="IsShieldCapable"/>
    <CValidatorUnitType id="NotSiegeTankBullyTest" parent="TacticalBurrowBullyTest">
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorUnitFilters id="EnemyTarget">
        <Filters value="-;Player,Ally,Neutral"/>
    </CValidatorUnitFilters>
    <CValidatorUnitFilters id="FriendlyTarget"/>
    <CValidatorUnitCompareBehaviorCount id="IsNotWarpingIn"/>
    <CValidatorUnitCompareBehaviorCount id="IsNotPhaseShifted"/>
    <CValidatorUnitFilters id="IsStructure"/>
    <CValidatorUnitCompareBehaviorCount id="IsWarpingIn"/>
    <CValidatorUnitType id="NotForceField"/>
    <CValidatorUnitFilters id="NotResources"/>
    <CValidatorLocationType id="NotResourcesOrEnemyTargetType"/>
    <CValidatorCombine id="NotResourcesOrEnemyTarget">
        <CombineArray value="NotResources"/>
        <CombineArray value="EnemyTarget"/>
    </CValidatorCombine>
    <CValidatorUnitCompareBehaviorCount id="NotUnstableMutation"/>
    <CValidatorUnitFilters id="RawResources"/>
    <CValidatorUnitFilters id="HarvestableResources"/>
    <CValidatorCombine id="Resources">
        <CombineArray value="RawResources"/>
        <CombineArray value="HarvestableResources"/>
    </CValidatorCombine>
    <CValidatorCombine id="BunkerIsEmpty">
        <CombineArray value="HasNoCargo"/>
        <CombineArray value="IsNotConstructing"/>
    </CValidatorCombine>
    <CValidatorCombine id="GravitonBeamValidators">
        <CombineArray value="CasterHasEnergyAndNotDead"/>
        <CombineArray value="NotVortexd"/>
        <CombineArray value="NotFrenzied"/>
    </CValidatorCombine>
    <CValidatorPlayerRequirement id="CleaveResearched"/>
    <CValidatorUnitFilters id="IsBuried"/>
    <CValidatorUnitFilters id="IsNotBuried"/>
    <CValidatorCombine id="NotVortexd">
        <CombineArray value="NotVortexdFriendly"/>
        <CombineArray value="NotVortexdEnemy"/>
    </CValidatorCombine>
    <CValidatorUnitCompareBehaviorCount id="NotVortexdFriendly"/>
    <CValidatorUnitCompareBehaviorCount id="NotVortexdEnemy"/>
    <CValidatorUnitCompareBehaviorCount id="NotGravitonBeamd"/>
    <CValidatorUnitCompareBehaviorCount id="NotThunderCannond"/>
    <CValidatorUnitCompareVital id="ShieldLQuarter"/>
    <CValidatorUnitCompareVital id="ShieldGZero"/>
    <CValidatorUnitMover id="TargetIsAir"/>
    <CValidatorUnitType id="TargetIsForceField"/>
    <CValidatorUnitMover id="TargetIsGround"/>
    <CValidatorUnitCompareBehaviorCount id="TargetIsNeuralParasited"/>
    <CValidatorUnitType id="NotPointDefenseDrone"/>
    <CValidatorUnitType id="TargetNotChangeling"/>
    <CValidatorCombine id="SiphonChannelValidators">
        <CombineArray value="TargetIsVisible"/>
        <CombineArray value="NotDead"/>
        <CombineArray value="IsNotPhaseShifted"/>
    </CValidatorCombine>
    <CValidatorLocationCreep id="TargetPointIsCreep"/>
    <CValidatorUnitCompareField id="TargetRadiusLarge"/>
    <CValidatorUnitCompareField id="TargetRadiusSmall"/>
    <CValidatorCombine id="TechLabIsDetached">
        <CombineArray value="TechLabNotFactory"/>
        <CombineArray value="IsNotConstructing"/>
        <CombineArray value="TechLabNotStarport"/>
        <CombineArray value="TechLabNotBarracks"/>
    </CValidatorCombine>
    <CValidatorUnitCompareBehaviorCount id="TechLabNotBarracks"/>
    <CValidatorCombine id="ReactorIsDetached">
        <CombineArray value="ReactorNotFactory"/>
        <CombineArray value="IsNotConstructing"/>
        <CombineArray value="ReactorNotStarport"/>
        <CombineArray value="ReactorNotBarracks"/>
    </CValidatorCombine>
    <CValidatorCombine id="GatewayIsWarpgate">
        <CombineArray value="IsWarpgate"/>
        <CombineArray value="IsNotConstructing"/>
    </CValidatorCombine>
    <CValidatorUnitCompareBehaviorCount id="ReactorNotBarracks"/>
    <CValidatorUnitCompareBehaviorCount id="ReactorNotFactory"/>
    <CValidatorUnitCompareBehaviorCount id="ReactorNotStarport"/>
    <CValidatorUnitCompareBehaviorCount id="IsHallucination"/>
    <CValidatorUnitCompareVital id="TelevacEnergyGE250">
        <WhichUnit Value="Caster"/>
        <Compare value="GE"/>
        <Value value="50"/>
    </CValidatorUnitCompareVital>
    <CValidatorCombine id="isWorker">
        <CombineArray value="IsDrone"/>
        <CombineArray value="IsProbe"/>
        <CombineArray value="IsSCV"/>
        <CombineArray value="IsMULE"/>
    </CValidatorCombine>
    <CValidatorUnitType id="IsDrone"/>
    <CValidatorUnitType id="IsMULE"/>
    <CValidatorUnitType id="IsProbe"/>
    <CValidatorUnitType id="IsUltralisk"/>
    <CValidatorUnitType id="IsMutalisk"/>
    <CValidatorUnitType id="IsCorruptor"/>
    <CValidatorUnitType id="IsRoach"/>
    <CValidatorUnitType id="IsInfestor"/>
    <CValidatorUnitType id="IsOverlord"/>
    <CValidatorUnitType id="IsZergling"/>
    <CValidatorUnitType id="IsHydralisk"/>
    <CValidatorUnitType id="IsWarpgate"/>
    <CValidatorUnitType id="IsGateway"/>
    <CValidatorUnitType id="NotPhotonCannon"/>
    <CValidatorCombine id="NeosteelFramePurchasedNoConstruction">
        <CombineArray value="NeosteelFramePurchased"/>
        <CombineArray value="IsNotConstructing"/>
    </CValidatorCombine>
    <CValidatorUnitFilters id="NotDeadOrConstruction"/>
    <CValidatorUnitType id="NotHydraGMissile"/>
    <CValidatorUnitType id="NotHydraAMissile"/>
    <CValidatorCombine id="PointDefenseDroneUnitFilter">
        <CombineArray value="noMarkers"/>
        <CombineArray value="MissileIsActive"/>
        <CombineArray value="NotRoachMissile"/>
    </CValidatorCombine>
    <CValidatorCombine id="CasterHasEnergyAndNotDead">
        <CombineArray value="CasterHasEnergy"/>
        <CombineArray value="NotDead"/>
    </CValidatorCombine>
    <CValidatorPlayerRequirement id="CentrificalHooksResearched"/>
    <CValidatorUnitType id="IsInfestorBurrowed"/>
    <CValidatorUnitType id="IsSupplyDepotLowered"/>
    <CValidatorUnitType id="IsSupplyDepotEitherFlavor"/>
    <CValidatorUnitCompareVital id="CasterHasEnergy"/>
    <CValidatorUnitScanning id="TargetIsScanning"/>
    <CValidatorUnitScanning id="CasterIsScanning"/>
    <CValidatorUnitCompareBehaviorCount id="DoesNotHaveTemporalRift"/>
    <CValidatorLocationType id="MULETargetCheck"/>
    <CValidatorLocationPlacement id="MULEPlacementCheck"/>
    <CValidatorCombine id="MULEUnitCheck">
        <CombineArray value="Minerals"/>
        <CombineArray value="MULEPlacementCheck"/>
    </CValidatorCombine>
    <CValidatorCombine id="Minerals">
        <CombineArray value="HighYield"/>
        <CombineArray value="MineralField"/>
    </CValidatorCombine>
    <CValidatorPlayerRequirement id="NeosteelFrameNotPurchased"/>
    <CValidatorCombine id="NeosteelFramePurchased">
        <CombineArray value="NeosteelFrameNotPurchased"/>
    </CValidatorCombine>
    <CValidatorPlayerRequirement id="NoMarineShield"/>
    <CValidatorUnitCompareBehaviorCount id="HasRepairBot"/>
    <CValidatorUnitCompareMoverPhase id="NotInLastMotionPhase"/>
    <CValidatorUnitType id="NotInfestorBurrowed"/>
    <CValidatorUnitCompareBehaviorCount id="NotSpawningMutantLarva"/>
    <CValidatorUnitCompareBehaviorCount id="NotSupplyDrop"/>
    <CValidatorUnitCompareCargo id="HasNoCargo"/>
    <CValidatorUnitCompareBehaviorCount id="HasGenerateCreepBehavior"/>
    <CValidatorLocationVision id="HasVision"/>
    <CValidatorUnitCompareBehaviorCount id="IsEtherial"/>
    <CValidatorCombine id="IsHatcheryLairOrHive">
        <CombineArray value="IsHatchery"/>
        <CombineArray value="IsLair"/>
        <CombineArray value="IsHive"/>
    </CValidatorCombine>
    <CValidatorUnitType id="IsLair"/>
    <CValidatorUnitType id="IsHive"/>
    <CValidatorUnitType id="IsHatchery"/>
    <CValidatorUnitFilters id="Cloaked"/>
    <CValidatorUnitFilters id="NotCloaked"/>
    <CValidatorUnitFilters id="NotStructure"/>
    <CValidatorCombine id="NotCloakedAndNotDead">
        <CombineArray value="NotCloaked"/>
        <CombineArray value="NotDead"/>
    </CValidatorCombine>
    <CValidatorCombine id="NotCloakedAndNotBuried">
        <CombineArray value="NotCloaked"/>
        <CombineArray value="IsNotBuried"/>
    </CValidatorCombine>
    <CValidatorCombine id="CloakedAndNotBuried">
        <CombineArray value="Cloaked"/>
        <CombineArray value="IsNotBuried"/>
    </CValidatorCombine>
    <CValidatorUnitFilters id="CasterNotDead"/>
    <CValidatorUnitFilters id="NotDead"/>
    <CValidatorUnitFilters id="IsDead"/>
    <CValidatorUnitFilters id="NotHallucination"/>
    <CValidatorUnitCompareBehaviorCount id="NotSupplyDropEnRoute"/>
    <CValidatorUnitType id="RegularYield"/>
    <CValidatorUnitType id="HighYield"/>
    <CValidatorUnitType id="MineralField"/>
    <CValidatorUnitCompareBehaviorCount id="TechLabNotFactory"/>
    <CValidatorUnitCompareBehaviorCount id="TechLabNotStarport"/>
    <CValidatorUnitFilters id="IsNotConstructing"/>
    <CValidatorCombine id="TimeWarpTargetFilters">
        <CombineArray value="TimeWarpViableTargets"/>
        <CombineArray value="NotDeadOrConstruction"/>
    </CValidatorCombine>
    <CValidatorCombine id="TimeWarpViableTargets">
        <CombineArray value="TimewarpProduction"/>
        <CombineArray value="TimewarpResearch"/>
    </CValidatorCombine>
    <CValidatorCombine id="TimewarpProduction">
        <CombineArray value="IsNexus"/>
        <CombineArray value="IsRoboticsFacility"/>
        <CombineArray value="IsStarGate"/>
        <CombineArray value="IsGateway"/>
        <CombineArray value="IsLarva"/>
        <CombineArray value="IsWarpgate"/>
        <CombineArray value="IsBarracks"/>
        <CombineArray value="IsFactory"/>
        <CombineArray value="IsStarport"/>
        <CombineArray value="IsCommandCenter"/>
        <CombineArray value="IsOrbitalCommand"/>
        <CombineArray value="IsPlanetaryFortress"/>
        <CombineArray value="IsEgg"/>
        <CombineArray value="IsHatcheryLairOrHive"/>
    </CValidatorCombine>
    <CValidatorCombine id="TimewarpResearch">
        <CombineArray value="IsCyberneticsCore"/>
        <CombineArray value="IsForge"/>
        <CombineArray value="IsRoboticsBay"/>
        <CombineArray value="IsTwilightCouncil"/>
        <CombineArray value="IsTemplarArchives"/>
        <CombineArray value="IsFleetBeacon"/>
        <CombineArray value="IsEngineeringBay"/>
        <CombineArray value="IsBarracksTechLab"/>
        <CombineArray value="IsStarportTechLab"/>
        <CombineArray value="IsFactoryTechLab"/>
        <CombineArray value="IsMercCompound"/>
        <CombineArray value="IsGhostAcademy"/>
        <CombineArray value="IsArmory"/>
        <CombineArray value="IsFusionCore"/>
        <CombineArray value="IsSpawningPool"/>
        <CombineArray value="IsEvolutionChamber"/>
        <CombineArray value="IsHydraliskDen"/>
        <CombineArray value="IsBanelingNest"/>
        <CombineArray value="IsRoachWarren"/>
        <CombineArray value="IsLurkerDen"/>
        <CombineArray value="IsInfestationPit"/>
        <CombineArray value="IsSpire"/>
        <CombineArray value="IsGreaterSpire"/>
        <CombineArray value="IsUltraliskCavern"/>
    </CValidatorCombine>
    <CValidatorUnitCompareOrderCount id="HatcheryNotMorphing"/>
    <CValidatorLocationPlacement id="ValidGround"/>
    <CValidatorCombine id="WarpBubbleTargetFilters">
        <CombineArray value="NoWarpBubbleMinerals"/>
        <CombineArray value="NoWarpBubbleHighYield"/>
        <CombineArray value="Minerals"/>
    </CValidatorCombine>
    <CValidatorCombine id="ZerglingUpgradedDeathByEviscerate">
        <CombineArray value="ZerglingUpgraded"/>
        <CombineArray value="DeathByEviscerate"/>
    </CValidatorCombine>
    <CValidatorCombine id="ZerglingUpgradedDeathByFire">
        <CombineArray value="ZerglingUpgraded"/>
        <CombineArray value="DeathByFire"/>
    </CValidatorCombine>
    <CValidatorPlayerRequirement id="ZerglingUpgraded"/>
    <CValidatorPlayerRequirement id="RoachUpgraded"/>
    <CValidatorCombine id="ZerglingUpgradedDeathByAcid">
        <CombineArray value="ZerglingUpgraded"/>
        <CombineArray value="DeathByAcid"/>
    </CValidatorCombine>
    <CValidatorUnitCompareMarkerCount id="noMarkers"/>
    <CValidatorLocationCompareCliffLevel id="ColossusCliffLevel"/>
    <CValidatorUnitCompareVital id="hasEnergy"/>
    <CValidatorUnitFilters id="KillHallucinationTargetFilters"/>
    <CValidatorCombine id="CommandCenterTransportCombine">
        <CombineArray value="CommandCenterTransportSCV"/>
    </CValidatorCombine>
    <CValidatorUnitType id="CommandCenterTransportSCV"/>
    <CValidatorUnitCompareVital id="healCasterMinEnergy"/>
    <CValidatorUnitType id="NotMothership"/>
    <CValidatorLocationCompareCliffLevel id="CliffLevelEqualOrLesser"/>
    <CValidatorLocationCompareCliffLevel id="CliffLevelEqual"/>
    <CValidatorLocationCompareCliffLevel id="CliffLevelLesser"/>
    <CValidatorLocationCompareCliffLevel id="CliffLevelGreater"/>
    <CValidatorUnitFilters id="empUTargetFilters"/>
    <CValidatorUnitFilters id="YamatoTargetFilters"/>
    <CValidatorUnitFilters id="PsiStormUTargetFilters"/>
    <CValidatorUnitFilters id="CorruptorInfectedTargetFiltersSource"/>
    <CValidatorUnitFilters id="CorruptorInfectedTargetFiltersTarget"/>
    <CValidatorUnitFilters id="healSmartTargetFilters"/>
    <CValidatorUnitCompareVital id="hasShields"/>
    <CValidatorUnitType id="NotSpawnling"/>
    <CValidatorUnitType id="D8ChargeUnitLink"/>
    <CValidatorUnitCompareField id="RequiresTerran"/>
    <CValidatorCombine id="LifeNotFullOrEnergyNotFull">
        <CombineArray value="LifeNotFull"/>
        <CombineArray value="EnergyNotFull"/>
    </CValidatorCombine>
    <CValidatorUnitCompareVital id="LifeNotFull"/>
    <CValidatorUnitCompareVital id="EnergyNotFull"/>
    <CValidatorUnitCompareVital id="EnergyNotFullCaster"/>
    <CValidatorUnitCompareVital id="EnergyFullCaster"/>
    <CValidatorUnitCompareVital id="EnergyHalfCaster"/>
    <CValidatorUnitCompareVital id="OneHealth"/>
    <CValidatorUnitCompareVital id="TwoHealth"/>
    <CValidatorUnitCompareVital id="ThreeHealth"/>
    <CValidatorUnitCompareBehaviorCount id="IsNotHallucination"/>
    <CValidatorUnitFilters id="PunisherGrenadesSlowTargetFilters"/>
    <CValidatorUnitBehaviorState id="CanSpendEnergy"/>
    <CValidatorUnitCompareVital id="LifeGEOneThird"/>
    <CValidatorUnitCompareVital id="LifeGEHalf"/>
    <CValidatorUnitCompareVital id="LifeGETwoThird"/>
    <CValidatorUnitCompareVital id="LifeGTZero"/>
    <CValidatorUnitCompareVital id="LifeLTTwoThird"/>
    <CValidatorUnitCompareVital id="LifeLTHalf"/>
    <CValidatorUnitCompareVital id="LifeLTOneThird"/>
    <CValidatorUnitFilters id="BurnDownValid"/>
    <CValidatorUnitFilters id="BurnDownUnderConstruction"/>
    <!-- Normal includes under construction to handle buildings damaged during construction. -->
    <CValidatorCombine id="BurnDownNormal">
        <CombineArray value="LifeGETwoThird"/>
        <CombineArray value="BurnDownUnderConstruction"/>
    </CValidatorCombine>
    <CValidatorCombine id="BurnDownLightSmoke">
        <CombineArray value="LifeLTTwoThird"/>
        <CombineArray value="LifeGEHalf"/>
        <CombineArray value="BurnDownValid"/>
    </CValidatorCombine>
    <CValidatorCombine id="BurnDownHeavySmoke">
        <CombineArray value="LifeLTHalf"/>
        <CombineArray value="LifeGEOneThird"/>
        <CombineArray value="BurnDownValid"/>
    </CValidatorCombine>
    <CValidatorCombine id="BurnDownFire">
        <CombineArray value="LifeLTOneThird"/>
        <CombineArray value="BurnDownValid"/>
    </CValidatorCombine>
    <CValidatorCombine id="ZergBleedNormal">
        <CombineArray value="LifeGETwoThird"/>
        <CombineArray value="ZergBleedingValid"/>
    </CValidatorCombine>
    <CValidatorCombine id="ZergBleedLight">
        <CombineArray value="LairNotMorphing"/>
        <CombineArray value="HatcheryNotMorphing"/>
        <CombineArray value="LifeLTTwoThird"/>
        <CombineArray value="LifeGEHalf"/>
        <CombineArray value="ZergBleedingValid"/>
    </CValidatorCombine>
    <CValidatorCombine id="ZergBleedHeavy">
        <CombineArray value="LairNotMorphing"/>
        <CombineArray value="HatcheryNotMorphing"/>
        <CombineArray value="LifeLTHalf"/>
        <CombineArray value="LifeGEOneThird"/>
        <CombineArray value="ZergBleedingValid"/>
    </CValidatorCombine>
    <CValidatorCombine id="ZergBleedProfusely">
        <CombineArray value="LairNotMorphing"/>
        <CombineArray value="HatcheryNotMorphing"/>
        <CombineArray value="LifeLTOneThird"/>
        <CombineArray value="ZergBleedingValid"/>
    </CValidatorCombine>
    <CValidatorUnitFilters id="ZergBleedingValid"/>
    <CValidatorUnitType id="NotRoachMissile"/>
    <CValidatorUnitType id="NotOrbitalCommand"/>
    <CValidatorUnitType id="NotPlanetaryFortress"/>
    <CValidatorUnitType id="NotNexus"/>
    <CValidatorUnitType id="NotHatchery"/>
    <CValidatorUnitType id="NotLair"/>
    <CValidatorUnitType id="NotHive"/>
    <CValidatorUnitType id="NotCommandCenter"/>
    <CValidatorUnitCompareBehaviorCount id="NoGravitonBeamInProgress"/>
    <CValidatorUnitType id="NotLarvaEgg"/>
    <CValidatorUnitType id="NotRoachEgg"/>
    <CValidatorUnitType id="NotCorruptorEgg"/>
    <CValidatorUnitType id="NotOverlordCocoon"/>
    <CValidatorUnitType id="NotQueenCocoon"/>
    <CValidatorUnitType id="IsQueen"/>
    <CValidatorUnitType id="NotQueen"/>
    <CValidatorUnitType id="GreaterObservatory"/>
    <CValidatorUnitFilters id="InfestationTargetFilters"/>
    <CValidatorCombine id="Infestation">
        <CombineArray value="NotDead"/>
        <CombineArray value="CasterNotDead"/>
        <CombineArray value="InfestationTargetFilters"/>
        <CombineArray value="HasVision"/>
    </CValidatorCombine>
    <CValidatorUnitCompareField id="DisguiseAsZealot"/>
    <CValidatorUnitCompareField id="DisguiseAsMarine"/>
    <CValidatorPlayerRequirement id="MissingMarineShieldUpgrade"/>
    <CValidatorPlayerRequirement id="HasMarineShieldUpgrade"/>
    <CValidatorCombine id="DisguiseAsMarineWithoutShield">
        <CombineArray value="DisguiseAsMarine"/>
        <CombineArray value="MissingMarineShieldUpgrade"/>
    </CValidatorCombine>
    <CValidatorCombine id="DisguiseAsMarineWithShield">
        <CombineArray value="DisguiseAsMarine"/>
        <CombineArray value="HasMarineShieldUpgrade"/>
    </CValidatorCombine>
    <CValidatorUnitCompareField id="DisguiseAsZergling"/>
    <CValidatorPlayerRequirement id="MissingZerglingWingsUpgrade"/>
    <CValidatorPlayerRequirement id="HasZerglingWingsUpgrade"/>
    <CValidatorPlayerRequirement id="HasHighCapacityBarrels"/>
    <CValidatorCombine id="DisguiseAsZerglingWithoutWings">
        <CombineArray value="DisguiseAsZergling"/>
        <CombineArray value="MissingZerglingWingsUpgrade"/>
    </CValidatorCombine>
    <CValidatorCombine id="DisguiseAsZerglingWithWings">
        <CombineArray value="DisguiseAsZergling"/>
        <CombineArray value="HasZerglingWingsUpgrade"/>
    </CValidatorCombine>
    <CValidatorLocationPlacement id="InfestedTerransPlacementCheck"/>
    <CValidatorLocationCompareRange id="VortexHideRange"/>
    <CValidatorCombine id="VortexApplyHide">
        <CombineArray value="VortexHideRange"/>
        <CombineArray value="IsConstructing"/>
    </CValidatorCombine>
    <CValidatorUnitOrderTargetType id="CanCharge"/>
    <CValidatorUnitCompareBehaviorCount id="NotCharging"/>
    <CValidatorUnitCompareOrderTargetRange id="ChargeMinDistance"/>
    <CValidatorLocationCompareRange id="ChargeMaxDistance"/>
    <CValidatorPlayerRequirement id="BattlecruiserUpgraded"/>
    <CValidatorCombine id="IsTownHall">
        <CombineArray value="IsNexus"/>
        <CombineArray value="IsCommandCenter"/>
        <CombineArray value="IsOrbitalCommand"/>
        <CombineArray value="IsPlanetaryFortress"/>
        <CombineArray value="IsHatchery"/>
        <CombineArray value="IsLair"/>
        <CombineArray value="IsHive"/>
    </CValidatorCombine>
    <CValidatorLocationComparePower id="IsPoweredByWarpPrism">
        <PowerSource value="WarpPrismPowerSource"/>
    </CValidatorLocationComparePower>
    <CValidatorUnitFilters id="BroodlingEscortFilters"/>
    <!-- 
    Stimpack 
    
        if (already buffed)
            return false;
            
        if (!attacking)
            return false;
            
        if (nearby medivac can heal)
            relax next two constraints:
            
        if (recently damaged)
            return false;
            
        if (!hostile targets)
            return false;
            
        return true;
    -->
    <CValidatorCombine id="DomTacticalStimpack">
        <CombineArray value="ExpertOrNotCampaign"/>
        <CombineArray value="TacticalStimpack"/>
    </CValidatorCombine>
    <CValidatorCombine id="TacticalStimpack">
        <CombineArray value="AdvancedOrNotCampaign"/>
        <CombineArray value="TacticalStimpackTestBuff"/>
        <CombineArray value="TacticalMarauderStimpackTestBuff"/>
        <CombineArray value="CasterIsAttacking"/>
        <CombineArray value="CasterNotInCombat"/>
        <CombineArray value="TacticalStimpackHostiles"/>
    </CValidatorCombine>
    <CValidatorUnitCompareBehaviorCount id="TacticalStimpackTestBuff"/>
    <CValidatorUnitCompareBehaviorCount id="TacticalMarauderStimpackTestBuff"/>
    <CValidatorCombine id="TacticalStimpackHostiles">
        <CombineArray value="TacticalStimpackHostileSearch"/>
        <CombineArray value="HostileSearchMedivac"/>
    </CValidatorCombine>
    <CValidatorCombine id="HostileSearchMedivac">
        <CombineArray value="TacticalStimpackHostileSearchWithMedic"/>
        <CombineArray value="MedivacNearbyWillHeal"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea id="TacticalStimpackHostileSearch" parent="HostileSearch">
        <Count value="4"/>
        <AreaArray Radius="5" Validator="TargetCanAttack"/>
        <SearchFlags index="ExtendByUnitRadius" value="1"/>
        <SearchFilters value="Visible;Player,Ally,Neutral,Worker,Missile,Stasis,Dead,Hidden,Hallucination,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="TacticalStimpackHostileSearchWithMedic" parent="TacticalStimpackHostileSearch">
        <Count value="2"/>
    </CValidatorLocationEnumArea>
    <CValidatorCombine id="MedivacWillHeal">
        <CombineArray value="TargetIsScanning"/>
        <CombineArray value="MedivacHasEnergy"/>
        <CombineArray value="IsMedivac"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea id="MedivacNearbyWillHeal">
        <AreaArray Radius="5" Validator="MedivacWillHeal"/>
    </CValidatorLocationEnumArea>
    <CValidatorUnitCompareVital id="MedivacHasEnergy"/>
    <CValidatorUnitType id="IsMedivac"/>
    <CValidatorCombine id="NoOrdersAndNoMove">
        <CombineArray value="CasterNotForcedAndNotWantsToMove"/>
        <CombineArray value="CasterHasNoOrders"/>
    </CValidatorCombine>
    <CValidatorCombine id="CasterNotForcedAndNotWantsToMove">
        <CombineArray value="CasterNotForcedToMove"/>
        <CombineArray value="CasterNotWantsToMove"/>
    </CValidatorCombine>
    <CValidatorCombine id="CasterForcedOrWantsToMove">
        <CombineArray value="CasterForcedToMove"/>
        <CombineArray value="CasterWantsToMove"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea id="SporeHostileSearchEmpty" parent="HostileSearchEmpty">
        <!--Sunken/Spore Attack Range = 7-->
        <AreaArray Radius="7"/>
        <SearchFlags index="ExtendByUnitRadius" value="1"/>
        <SearchFilters value="Air,Visible;Player,Ally,Neutral,Worker,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="SunkenHostileSearchEmpty" parent="SporeHostileSearchEmpty">
        <SearchFilters value="Ground,Visible;Player,Ally,Neutral,Worker,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="SporeHostileSearch" parent="HostileSearch">
        <!--Spore/Spore Attack Range = 7-->
        <AreaArray Radius="7"/>
        <SearchFlags index="ExtendByUnitRadius" value="1"/>
        <SearchFilters value="Air,Visible;Player,Ally,Neutral,Worker,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="SunkenHostileSearch" parent="SporeHostileSearch">
        <SearchFilters value="Ground,Visible;Player,Ally,Neutral,Worker,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <!--
    
    Overlord Generate Creep Start
    
    if (!nearby nonzerg ally building or worker) AND
       (!nearby enemy zerg units)
       
        Start
    
    -->
    <CValidatorCombine id="TacticalGenerateCreepStart">
        <CombineArray value="CasterNotCampaign"/>
        <CombineArray value="OverlordNoAllyBuildingSearch"/>
        <CombineArray value="OverlordNoAllyWorkerSearch"/>
        <CombineArray value="OverlordNoEnemyZergSearch"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea id="OverlordNoEnemyZergSearch" parent="HostileSearchEmpty">
        <AreaArray Radius="11" Validator="IsZerg"/>
        <SearchFilters value="Visible;Player,Ally,Neutral,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="OverlordNoAllyBuildingSearch" parent="HostileSearchEmpty">
        <!--Overlord vision = 11-->
        <AreaArray Radius="11" Validator="NotZerg"/>
        <SearchFilters value="Structure,Visible;Player,Neutral,Enemy,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="OverlordNoAllyWorkerSearch" parent="OverlordNoAllyBuildingSearch">
        <SearchFilters value="Worker,Visible;Player,Neutral,Enemy,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <!--
    
    Overlord Generate Creep Stop
    
    if (nearby nonzerg ally building or worker) OR
       (nearby enemy zerg units)
       
        Stop
    
    -->
    <CValidatorCombine id="TacticalGenerateCreepStop">
        <CombineArray value="CasterNotCampaign"/>
        <CombineArray value="GenerateCreepStopValidator"/>
    </CValidatorCombine>
    <CValidatorCombine id="GenerateCreepStopValidator">
        <CombineArray value="OverlordAllyBuildingSearch"/>
        <CombineArray value="OverlordAllyWorkerSearch"/>
        <CombineArray value="OverlordEnemyZergSearch"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea id="OverlordEnemyZergSearch" parent="HostileSearch">
        <AreaArray Radius="11" Validator="IsZerg"/>
        <SearchFilters value="Visible;Player,Ally,Neutral,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="OverlordAllyBuildingSearch" parent="HostileSearch">
        <!--Overlord vision = 11-->
        <AreaArray Radius="11" Validator="NotZerg"/>
        <SearchFilters value="Structure,Visible;Player,Neutral,Enemy,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="OverlordAllyWorkerSearch" parent="OverlordAllyBuildingSearch">
        <SearchFilters value="Worker,Visible;Player,Neutral,Enemy,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <!--
    
    Siege Tank Unsieged
    
        if ((!forced to move) AND
            (!wants to move OR (in combat AND units in siege range)) AND
            (has attack order) AND
            (!ground enemies in minimimum range) AND
            (AI Bully Type not set or !AI Bully Type))
            
            Siege
    
    -->
    <CValidatorCombine id="TacticalSiegeTankSeige">
        <CombineArray value="CasterNotForcedToMove"/>
        <CombineArray value="CasterIdleOrAttacking"/>
        <CombineArray value="SiegeTankMinRangeHostileSearchEmpty"/>
        <CombineArray value="TankNotWantsToMoveOrEnemiesInRange"/>
        <CombineArray value="NotSiegeTankBullyTest"/>
    </CValidatorCombine>
    <CValidatorCombine id="CasterIdleOrAttacking">
        <CombineArray value="CasterHasNoOrders"/>
        <CombineArray value="CasterIsAttacking"/>
    </CValidatorCombine>
    <CValidatorCombine id="TankNotWantsToMoveOrEnemiesInRange">
        <CombineArray value="CasterNotWantsToMove"/>
        <CombineArray value="InCombatAndSiegeTankHostiles"/>
    </CValidatorCombine>
    <CValidatorCombine id="InCombatAndSiegeTankHostiles">
        <CombineArray value="AICasterInCombat"/>
        <CombineArray value="SiegeTankHostileSearch"/>
    </CValidatorCombine>
    <!--
    
    Siege Tank Sieged
    
        if (forced to move OR
            idle AND ((wants to move AND !in combat) OR
                       ground enemies in range))
                       
            Unsiege
    
    -->
    <CValidatorCombine id="TacticalSiegeTankUnsiege">
        <CombineArray value="CasterForcedToMove"/>
        <CombineArray value="TankIdleAndShouldMove"/>
    </CValidatorCombine>
    <CValidatorCombine id="TankIdleAndShouldMove">
        <CombineArray value="CasterHasNoOrders"/>
        <CombineArray value="SiegeTankShouldMove"/>
    </CValidatorCombine>
    <CValidatorCombine id="SiegeTankShouldMove">
        <CombineArray value="AICasterWantsToMoveAndNotCombat"/>
        <CombineArray value="SiegeTankMinRangeHostileSearch"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea id="SiegeTankMinRangeHostileSearch" parent="HostileSearch">
        <!--Siege tank min range = 2-->
        <AreaArray Radius="2"/>
        <SearchFlags index="ExtendByUnitRadius" value="1"/>
        <SearchFilters value="Ground,Visible;Player,Ally,Neutral,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="SiegeTankMinRangeHostileSearchEmpty" parent="SiegeTankMinRangeHostileSearch">
        <Compare value="Eq"/>
        <Count value="0"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="SiegeTankHostileSearch" parent="SiegeTankMinRangeHostileSearch">
        <!--Siege tank max range = 13-->
        <AreaArray Radius="13"/>
    </CValidatorLocationEnumArea>
    <!--
    
    Supply Depot Raise
    
        if (nearby ground units)
            raise
    -->
    <CValidatorCombine id="TacticalSupplyDepotRaise">
        <CombineArray value="SupplyDepotRaiseHostileSearch"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea id="SupplyDepotRaiseHostileSearch" parent="HostileSearch">
        <AreaArray Radius="10"/>
        <SearchFlags index="ExtendByUnitRadius" value="1"/>
        <SearchFilters value="Ground,Visible;Player,Ally,Neutral,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <!--
    
    Supply Depot Lowered
    
        if (!nearby ground units)
            lower
    -->
    <!--<CValidatorUnitFilters id="SupplyDepotTargetFilters">
        <Filters value="Enemy,Ground;Player,Ally,Neutral"/>
    </CValidatorUnitFilters>-->
    <CValidatorCombine id="TacticalSupplyDepotDown">
        <CombineArray value="CasterNotCampaign"/>
    </CValidatorCombine>
    <!--<CValidatorLocationEnumArea id="SupplyDepotDownHostileSearch" parent="SupplyDepotRaiseHostileSearch">
        <Count value="0"/>
        <Compare value="Eq"/>
    </CValidatorLocationEnumArea>-->
    <!--
    Carrier Hangar
        
        return (not training);
    -->
    <CValidatorUnitCompareOrderCount id="HangarQueueEmpty"/>
    <!--  
    
    Drone Burrow
        
        if (force unburrow)
            return false;
            
        if (no threatening units)
            return false;

        if (suggest unburrow)
            return false;
            
        if (detected)
            return false;
            
        if (!campaign)
            return life < 90%;
            
        if (!suggest burrow)
            return false;
        
        return true;
    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensDrone" parent="Threatens">
        <AttackerAlternateType value="Drone"/>
    </CValidatorUnitCompareAttackPriority>
    <CValidatorLocationEnumArea id="TacticalBurrowDroneHostileSearchEmpty" parent="HostileSearchEmpty">
        <AreaArray Radius="8" Validator="ThreatensDrone"/>
        <SearchFilters value="Visible;Player,Ally,Neutral,Worker,Missile,Stasis,Dead,Hidden,Hallucination,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorFunction id="TacticalBurrowDroneDown">
        <Line Failure="CasterForceUnburrow"/>
        <Line Failure="TacticalBurrowDroneHostileSearchEmpty"/>
        <Line Failure="CasterSuggestUnburrow"/>
        <Line Failure="TacticalBurrowCasterDetected"/>
        <Line Test="CasterNotCampaign" Return="CasterLifeLT90Percent"/>
        <Line Failure="CasterNotSuggestBurrow"/>
    </CValidatorFunction>
    <!--
    
    Drone Unburrow
    
        if (force unburrow)
            return true;
            
        if (no threatening units)
            return true;
            
        if (suggest unburrow)
            return true;
            
        if (detected)
            return true;
            
        if (!campaign)
            return life == 100%            
            
        if (suggest burrow)
            return false;
            
        return true;
    -->
    <CValidatorFunction id="TacticalBurrowDroneUp">
        <Line Success="CasterForceUnburrow"/>
        <Line Success="TacticalBurrowDroneHostileSearchEmpty"/>
        <Line Success="CasterSuggestUnburrow"/>
        <Line Success="TacticalBurrowCasterDetected"/>
        <Line Test="CasterNotCampaign" Return="CasterLifeFull"/>
        <Line Failure="CasterSuggestBurrow"/>
    </CValidatorFunction>
    <!--
    
    Shared Burrow
        
        if (force unburrow)
            return false;
            
        if (no threatening units) {
            if (wants to move)
                return false;
            if (has orders)
                return false;
        }
        
        // harder melee burrow when idle
        if (!campaign)
            if (difficulty >= hard)
                if (no enemy units)
                    return true;
        
        if (suggest unburrow)
            return false;
            
        if (detected)
            return false;
            
        if (suggest burrow)
            return true;
            
        if (campaign) {
            if (bully should be burrowed)
                if (no enemy units)
                    return true;

            // campaign default is stay in current mode
            return false;
        }
        
        // melee only below here
        if (difficulty < hard)
            return false;
            
        if (vitals >= MAXVITALITY%)
            return false;
            
        if (vitals <= MINVITALITY%)
            return false;
            
        if (vitals > 20)
            if (vitals > enemyVit)
                return false;

        return true;
    -->
    <CValidatorLocationEnumArea id="TacticalBurrowHostileSearchEmpty" parent="TacticalBurrowSearchEmpty">
        <AreaArray Radius="8"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="TacticalBurrowHostileSearch" parent="HostileSearch">
        <AreaArray Radius="8"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="TacticalBurrowCasterDetected">
        <AreaArray Radius="8"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="TacticalBurrowHostileLifeSearch" parent="HostileSearch">
        <AreaArray Radius="8" Validator="TargetAttackingCaster"/>
        <Count value="0"/>
        <CombinedVital value="Life"/>
        <CombinedVitalCompare value="LE"/>
        <CachedSearch value="TacticalBurrow"/>
    </CValidatorLocationEnumArea>
    <CValidatorCombine id="TacticalBurrowMeleeHighDiffucltyNoHostiles">
        <CombineArray value="CasterNotCampaign"/>
        <CombineArray value="CasterDifficultyGE3"/>
        <CombineArray value="TacticalBurrowHostileSearchEmpty"/>
    </CValidatorCombine>
    <CValidatorCombine id="TacticalBurrowCampaignNoHostiles">
        <CombineArray value="CasterCampaign"/>
        <CombineArray value="TacticalBurrowHostileSearchEmpty"/>
    </CValidatorCombine>
    <CValidatorCombine id="TacticalBurrowCampaignHostiles">
        <CombineArray value="CasterCampaign"/>
        <CombineArray value="TacticalBurrowHostileSearch"/>
    </CValidatorCombine>
    <CValidatorCombine id="TacticalBurrowLifeTest">
        <CombineArray value="CasterLifeGT20Percent"/>
        <CombineArray value="TacticalBurrowHostileLifeSearch"/>
    </CValidatorCombine>
    <CValidatorCombine id="TacticalBurrowNoCampaignCasterDetected">
        <CombineArray value="CasterNotCampaign"/>
        <CombineArray value="TacticalBurrowCasterDetected"/>
    </CValidatorCombine>
    <!--
    
    Shared Unburrow
    
        if (force unburrow)
            return true;
            
        if (no threatening units) {
            if (wants to move)
                return true;
            if (has orders)
                return true;
        }
        
        // harder melee stay burrowed when idle
        if (!campaign)
            if (difficulty >= hard)
                if (no enemy units)
                    return false;
        
        if (suggest unburrow)
            return true;

        if (!campaign && detected)
            return true;
            
        if (suggest burrow)
            return false;
            
        if (campaign) {
            if (bully should be unburrowed)
                return true;

            if (enemy units)
                return true;

            // campaign default is stay in current mode
            return false;
        }
  
        if (difficulty < hard)
            return true;
            
        if (vitals < VITALITY%)
            return false;

        //if (vitals > 20)
        //    if (vitals > enemyVit)
        //        return true;
        
        return true;
    -->
    <!-- 
    
    Lurker Burrow
        
        if (force unburow)
            return false;
    
        if (no enemy units) {
            if (wants to move)
                return false;
        }
            
        return true;
    -->
    <CValidatorFunction id="TacticalBurrowLurkerDown">
        <Line Failure="CasterForceUnburrow"/>
        <Line Test="TacticalBurrowHostileSearchEmpty" Failure="CasterWantsToMove"/>
    </CValidatorFunction>
    <!--
    
    Lurker Unburrow
    
        return !Lurker Burrow;
    -->
    <CValidatorCombine id="TacticalBurrowLurkerUp">
        <CombineArray value="TacticalBurrowLurkerDown"/>
    </CValidatorCombine>
    <!-- 
    
    SwarmHost Burrow
        
        if (no enemy units) {
             if (force unburow || force move || wants to move)
                return false;
        }
            
        return true;
    -->
    <CValidatorFunction id="TacticalBurrowSwarmHostDown">
        <Line Test="TacticalBurrowHostileSearchEmpty" Failure="CasterWouldLikeToUnburrowMove"/>
    </CValidatorFunction>
    <!--
    
    SwarmHost Unburrow
    
        return !SwarmHost Burrow;
    -->
    <CValidatorCombine id="TacticalBurrowSwarmHostUp">
        <CombineArray value="TacticalBurrowSwarmHostDown"/>
    </CValidatorCombine>
    <!--
    
    Queen Burrow & Unburrow

        Queen Burrow is very similar to drone burrow, default is up, only burrow to live
    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensQueen" parent="ThreatensUnit" unitLink="Queen"/>
    <CValidatorCombine id="TacticalBurrowQueenThreatTest" parent="TacticalBurrowThreatTest" unitLink="Queen"/>
    <CValidatorLocationEnumArea id="TacticalBurrowQueenThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Queen"/>
    <CValidatorUnitType id="TacticalBurrowQueenBullyTest" parent="TacticalBurrowBullyTest" unitLink="Queen"/>
    <CValidatorFunction id="TacticalBurrowQueenDown">
        <Line Failure="CasterForceUnburrow"/>
        <Line Failure="TacticalBurrowDroneHostileSearchEmpty"/>
        <Line Failure="CasterSuggestUnburrow"/>
        <Line Failure="TacticalBurrowCasterDetected"/>
        <Line Test="CasterNotCampaign" Return="CasterLifeLT50Percent"/>
        <Line Failure="CasterNotSuggestBurrow"/>
    </CValidatorFunction>
    <CValidatorFunction id="TacticalBurrowQueenUp">
        <Line Success="CasterForceUnburrow"/>
        <Line Success="TacticalBurrowDroneHostileSearchEmpty"/>
        <Line Success="CasterSuggestUnburrow"/>
        <Line Success="TacticalBurrowCasterDetected"/>
        <Line Test="CasterNotCampaign" Return="CasterLifeGT75Percent"/>
        <Line Failure="CasterSuggestBurrow"/>
    </CValidatorFunction>
    <!--
    
    Zergling Burrow & Unburrow
    
    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensZergling" parent="ThreatensUnit" unitLink="Zergling"/>
    <CValidatorCombine id="TacticalBurrowZerglingThreatTest" parent="TacticalBurrowThreatTest" unitLink="Zergling"/>
    <CValidatorLocationEnumArea id="TacticalBurrowZerglingThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Zergling"/>
    <CValidatorCombine id="TacticalBurrowZerglingCampaignNoHostilesBullyBurrow" parent="TacticalBurrowCampaignNoHostilesBullyBurrow" unitLink="ZerglingBurrowed"/>
    <CValidatorCombine id="TacticalBurrowZerglingCampaignBullyUnburrow" parent="TacticalBurrowCampaignBullyUnburrow" unitLink="Zergling"/>
    <CValidatorUnitType id="TacticalBurrowZerglingBullyTest" parent="TacticalBurrowBullyTest" unitLink="Zergling"/>
    <CValidatorUnitType id="TacticalBurrowZerglingBurrowedBullyTest" parent="TacticalBurrowBullyTest" unitLink="ZerglingBurrowed"/>
    <CValidatorFunction id="TacticalBurrowZerglingDown" parent="TacticalBurrowSharedDown" maxVitals="100" minVitals="0" unitLink="Zergling"/>
    <CValidatorFunction id="TacticalBurrowZerglingUp" parent="TacticalBurrowSharedUp" maxVitals="100" unitLink="Zergling"/>
    <!--
    
    Baneling Burrow & Unburrow
    
    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensBaneling" parent="ThreatensUnit" unitLink="Baneling"/>
    <CValidatorCombine id="TacticalBurrowBanelingThreatTest" parent="TacticalBurrowThreatTest" unitLink="Baneling"/>
    <CValidatorLocationEnumArea id="TacticalBurrowBanelingThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Baneling"/>
    <CValidatorCombine id="TacticalBurrowBanelingCampaignNoHostilesBullyBurrow" parent="TacticalBurrowCampaignNoHostilesBullyBurrow" unitLink="BanelingBurrowed"/>
    <CValidatorCombine id="TacticalBurrowBanelingCampaignBullyUnburrow" parent="TacticalBurrowCampaignBullyUnburrow" unitLink="Baneling"/>
    <CValidatorUnitType id="TacticalBurrowBanelingBullyTest" parent="TacticalBurrowBullyTest" unitLink="Baneling"/>
    <CValidatorUnitType id="TacticalBurrowBanelingBurrowedBullyTest" parent="TacticalBurrowBullyTest" unitLink="BanelingBurrowed"/>
    <CValidatorFunction id="TacticalBurrowBanelingDown" parent="TacticalBurrowSharedDown" maxVitals="75" minVitals="50" unitLink="Baneling"/>
    <CValidatorFunction id="TacticalBurrowBanelingUp" parent="TacticalBurrowSharedUp" maxVitals="90" unitLink="Baneling"/>
    <!--
    
    Hydralisk Burrow & Unburrow
    
    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensHydralisk" parent="ThreatensUnit" unitLink="Hydralisk"/>
    <CValidatorCombine id="TacticalBurrowHydraliskThreatTest" parent="TacticalBurrowThreatTest" unitLink="Hydralisk"/>
    <CValidatorLocationEnumArea id="TacticalBurrowHydraliskThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Hydralisk"/>
    <CValidatorCombine id="TacticalBurrowHydraliskCampaignNoHostilesBullyBurrow" parent="TacticalBurrowCampaignNoHostilesBullyBurrow" unitLink="HydraliskBurrowed"/>
    <CValidatorCombine id="TacticalBurrowHydraliskCampaignBullyUnburrow" parent="TacticalBurrowCampaignBullyUnburrow" unitLink="Hydralisk"/>
    <CValidatorUnitType id="TacticalBurrowHydraliskBullyTest" parent="TacticalBurrowBullyTest" unitLink="Hydralisk"/>
    <CValidatorUnitType id="TacticalBurrowHydraliskBurrowedBullyTest" parent="TacticalBurrowBullyTest" unitLink="HydraliskBurrowed"/>
    <CValidatorFunction id="TacticalBurrowHydraliskDown" parent="TacticalBurrowSharedDown" maxVitals="50" minVitals="30" unitLink="Hydralisk"/>
    <CValidatorFunction id="TacticalBurrowHydraliskUp" parent="TacticalBurrowSharedUp" maxVitals="60" unitLink="Hydralisk"/>
    <!--
    
    Roach Burrow & Unburrow

    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensRoach" parent="ThreatensUnit" unitLink="Roach"/>
    <CValidatorCombine id="TacticalBurrowRoachThreatTest" parent="TacticalBurrowThreatTest" unitLink="Roach"/>
    <CValidatorLocationEnumArea id="TacticalBurrowRoachThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Roach"/>
    <CValidatorCombine id="TacticalBurrowRoachCampaignNoHostilesBullyBurrow" parent="TacticalBurrowCampaignNoHostilesBullyBurrow" unitLink="RoachBurrowed"/>
    <CValidatorCombine id="TacticalBurrowRoachCampaignBullyUnburrow" parent="TacticalBurrowCampaignBullyUnburrow" unitLink="Roach"/>
    <CValidatorUnitType id="TacticalBurrowRoachBullyTest" parent="TacticalBurrowBullyTest" unitLink="Roach"/>
    <CValidatorUnitType id="TacticalBurrowRoachBurrowedBullyTest" parent="TacticalBurrowBullyTest" unitLink="RoachBurrowed"/>
    <CValidatorFunction id="TacticalBurrowRoachDown" parent="TacticalBurrowSharedDown" maxVitals="50" minVitals="30" unitLink="Roach"/>
    <CValidatorFunction id="TacticalBurrowRoachUp" parent="TacticalBurrowSharedUp" maxVitals="60" unitLink="Roach"/>
    <!--
    
    Infestor Burrow & Unburrow

    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensInfestor" parent="ThreatensUnit" unitLink="Infestor"/>
    <CValidatorCombine id="TacticalBurrowInfestorThreatTest" parent="TacticalBurrowThreatTest" unitLink="Infestor"/>
    <CValidatorLocationEnumArea id="TacticalBurrowInfestorThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Infestor"/>
    <CValidatorCombine id="TacticalBurrowInfestorCampaignNoHostilesBullyBurrow" parent="TacticalBurrowCampaignNoHostilesBullyBurrow" unitLink="InfestorBurrowed"/>
    <CValidatorCombine id="TacticalBurrowInfestorCampaignBullyUnburrow" parent="TacticalBurrowCampaignBullyUnburrow" unitLink="Infestor"/>
    <CValidatorUnitType id="TacticalBurrowInfestorBullyTest" parent="TacticalBurrowBullyTest" unitLink="Infestor"/>
    <CValidatorUnitType id="TacticalBurrowInfestorBurrowedBullyTest" parent="TacticalBurrowBullyTest" unitLink="InfestorBurrowed"/>
    <CValidatorFunction id="TacticalBurrowInfestorDown" parent="TacticalBurrowSharedDown" maxVitals="50" minVitals="30" unitLink="Infestor"/>
    <CValidatorFunction id="TacticalBurrowInfestorUp" parent="TacticalBurrowSharedUp" maxVitals="60" unitLink="Infestor"/>
    <!--
    
    Ultralisk Burrow
    
    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensUltralisk" parent="ThreatensUnit" unitLink="Ultralisk"/>
    <CValidatorCombine id="TacticalBurrowUltraliskThreatTest" parent="TacticalBurrowThreatTest" unitLink="Ultralisk"/>
    <CValidatorLocationEnumArea id="TacticalBurrowUltraliskThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Ultralisk"/>
    <CValidatorCombine id="TacticalBurrowUltraliskCampaignNoHostilesBullyBurrow" parent="TacticalBurrowCampaignNoHostilesBullyBurrow" unitLink="UltraliskBurrowed"/>
    <CValidatorCombine id="TacticalBurrowUltraliskCampaignBullyUnburrow" parent="TacticalBurrowCampaignBullyUnburrow" unitLink="Ultralisk"/>
    <CValidatorUnitType id="TacticalBurrowUltraliskBullyTest" parent="TacticalBurrowBullyTest" unitLink="Ultralisk"/>
    <CValidatorUnitType id="TacticalBurrowUltraliskBurrowedBullyTest" parent="TacticalBurrowBullyTest" unitLink="UltraliskBurrowed"/>
    <CValidatorFunction id="TacticalBurrowUltraliskDown" parent="TacticalBurrowSharedDown" maxVitals="30" minVitals="10" unitLink="Ultralisk"/>
    <CValidatorFunction id="TacticalBurrowUltraliskUp" parent="TacticalBurrowSharedUp" maxVitals="40" unitLink="Ultralisk"/>
    <!-- 
    
        Cloak Helper Functions
    
    -->
    <CValidatorLocationEnumArea id="TacticalCloakDetected" parent="TacticalBurrowCasterDetected"/>
    <CValidatorLocationEnumArea id="TacticalCloakNotDetected" parent="TacticalCloakDetected">
        <Compare value="Eq"/>
        <Count value="0"/>
    </CValidatorLocationEnumArea>
    <!-- 
    
    Banshee Cloak
        
    -->
    <CValidatorUnitCompareAttackPriority id="UnitThreatensBanshee" parent="UnitThreatens" unitLink="Banshee"/>
    <CValidatorCombine id="TacticalBansheeCloakOn" parent="TacticalCloakSharedOn" unitLink="Banshee"/>
    <CValidatorLocationEnumArea id="TacticalBansheeCloakThreatSearch" parent="TacticalCloakThreatSearch" unitLink="Banshee"/>
    <CValidatorCombine id="TacticalBansheeCloakOff" parent="TacticalCloakSharedOff" unitLink="Banshee"/>
    <CValidatorLocationEnumArea id="TacticalBansheeCloakThreatSearchEmpty" parent="TacticalCloakThreatSearchEmpty" unitLink="Banshee"/>
    <!-- 
    
    Ghost Cloak
    
    -->
    <CValidatorUnitCompareAttackPriority id="UnitThreatensGhost" parent="UnitThreatens" unitLink="Ghost"/>
    <CValidatorCombine id="TacticalGhostCloakOn">
        <CombineArray value="TacticalGhostSharedOn"/>
        <CombineArray value="TacticalCloakNotDetected"/>
    </CValidatorCombine>
    <CValidatorCombine id="TacticalGhostSharedOn" parent="TacticalCloakSharedOn" unitLink="Ghost"/>
    <CValidatorLocationEnumArea id="TacticalGhostCloakThreatSearch" parent="TacticalCloakThreatSearch" unitLink="Ghost"/>
    <CValidatorCombine id="TacticalGhostCloakOff" parent="TacticalCloakSharedOff" unitLink="Ghost"/>
    <CValidatorLocationEnumArea id="TacticalGhostCloakThreatSearchEmpty" parent="TacticalCloakThreatSearchEmpty" unitLink="Ghost"/>
    <!--
    
    D8Charge
    
    -->
    <CValidatorCombine id="D8ChargeTargetValidator">
        <CombineArray value="NotPhotonCannon"/>
        <CombineArray value="noMarkers"/>
        <CombineArray value="TargetLifeGE60"/>
        <CombineArray value="NoNearbyAllies"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea id="NoNearbyAllies" parent="HostileSearchEmpty">
        <WhichLocation Value="TargetUnit"/>
        <SearchFilters value="Ground,Visible;Neutral,Enemy,Missile,Stasis,Dead,Hidden,Hallucination,Invulnerable"/>
        <AreaArray Radius="2.5"/>
        <SearchFlags index="ExtendByUnitRadius" value="1"/>
    </CValidatorLocationEnumArea>
    <!--
    
    GravitonBeam
    
    -->
    <CValidatorCombine id="IdleAttackAirGroundValidator">
        <CombineArray value="AttacksAirIdleGE3"/>
        <CombineArray value="AirIdleGE2AndGroundLE2"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea id="AttacksAirIdleGE3" parent="HostileSearch">
        <!--make the count value one less because it doesn't include own unit-->
        <Count value="2"/>
        <AreaArray Radius="7" Validator="AttacksAirAndIdle"/>
        <SearchFilters value="-;Neutral,Enemy,Worker,Missile,Stasis,Dead,Hidden,Hallucination,Invulnerable"/>
        <SearchFlags index="ExtendByUnitRadius" value="1"/>
    </CValidatorLocationEnumArea>
    <CValidatorCombine id="AttacksAirAndIdle">
        <CombineArray value="TargetHasNoOrders"/>
        <CombineArray value="TargetAttacksAir"/>
    </CValidatorCombine>
    <CValidatorCombine id="AirIdleGE2AndGroundLE2">
        <CombineArray value="AttacksAirIdleGE2"/>
        <CombineArray value="AttacksGroundLT2"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea id="AttacksAirIdleGE2" parent="AttacksAirIdleGE3">
        <Count value="1"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="AttacksGroundLT2" parent="AttacksAirIdleGE2">
        <Compare value="LT"/>
        <AreaArray Radius="7" Validator="TargetAttacksGround"/>
    </CValidatorLocationEnumArea>
    <CValidatorUnitCompareAttackPriority id="ThreatensPhoenix" parent="Threatens">
        <AttackerAlternateType value="Phoenix"/>
    </CValidatorUnitCompareAttackPriority>
    <CValidatorCombine id="GravitonBeamThreatValidatorTarget">
        <CombineArray value="noMarkers"/>
        <CombineArray value="ThreatensPhoenix"/>
    </CValidatorCombine>
    <CValidatorCombine id="GravitonBeamHostileValidatorTarget">
        <CombineArray value="noMarkers"/>
        <CombineArray value="TargetLifeGE200"/>
    </CValidatorCombine>
    <CValidatorCombine id="GravitonBeamThreatValidatorCaster">
        <CombineArray value="CasterEnergyGE100"/>
    </CValidatorCombine>
    <CValidatorCombine id="GravitonBeamHostileValidatorCaster">
        <CombineArray value="CasterEnergyGE150"/>
    </CValidatorCombine>
    <!--
    
    Stalker Blink
    
    -->
    <CValidatorLocationCompareRange id="TacticalBlinkRetreatTest"/>
    <CValidatorLocationCompareRange id="TacticalBlinkAttackRange"/>
    <CValidatorFunction id="TacticalBlinkChaseTest">
        <Line Failure="TacticalBlinkTargetAttacking"/>
        <Line Failure="TacticalBlinkTargetClose"/>
    </CValidatorFunction>
    <CValidatorUnitCompareOrderCount id="TacticalBlinkTargetAttacking"/>
    <CValidatorLocationCompareRange id="TacticalBlinkTargetClose"/>
    <CValidatorUnitType id="SpineCrawler"/>
    <!--
    
    BattleCruiser Defensive Matrix
    
    If (Recently Attacked) {
    
    If (Health < 75% && Nearby Enemies >= 3)
        return true;
    
    If (Health < 60% && Nearby Enemies >= 2)
        return true;
        
    If (Health < 40% && Nearby Enemies >= 1)
        return true;
        
    }
    
    -->
    <CValidatorCombine id="TacticalDefensiveMatrix">
        <CombineArray value="CasterInCombat"/>
        <CombineArray value="DefensiveMatrixHostileCheck"/>
    </CValidatorCombine>
    <CValidatorCombine id="DefensiveMatrixHostileCheck">
        <CombineArray value="DefensiveMatrixHostileCheckLT75%"/>
        <CombineArray value="DefensiveMatrixHostileCheckLT60%"/>
        <CombineArray value="DefensiveMatrixHostileCheckLT40%"/>
    </CValidatorCombine>
    <CValidatorCombine id="DefensiveMatrixHostileCheckLT75%">
        <CombineArray value="CasterLifeLT75Percent"/>
        <CombineArray value="TacticalDefensiveMatrixHostileSearch75%"/>
    </CValidatorCombine>
    <CValidatorCombine id="DefensiveMatrixHostileCheckLT60%">
        <CombineArray value="CasterLifeLT60Percent"/>
        <CombineArray value="TacticalDefensiveMatrixHostileSearch60%"/>
    </CValidatorCombine>
    <CValidatorCombine id="DefensiveMatrixHostileCheckLT40%">
        <CombineArray value="CasterLifeLT40Percent"/>
        <CombineArray value="TacticalDefensiveMatrixHostileSearch40%"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea id="TacticalDefensiveMatrixHostileSearch75%" parent="HostileSearch">
        <Count value="3"/>
        <AreaArray Radius="10" Validator="TargetCanAttack"/>
        <SearchFlags index="ExtendByUnitRadius" value="1"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="TacticalDefensiveMatrixHostileSearch60%" parent="TacticalDefensiveMatrixHostileSearch75%">
        <Count value="2"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="TacticalDefensiveMatrixHostileSearch40%" parent="TacticalDefensiveMatrixHostileSearch75%">
        <Count value="1"/>
    </CValidatorLocationEnumArea>
    <!--
    
    Infestor Mind Control
    
    -->
    <CValidatorUnitCompareVital id="InfestedTerranEnergyCheck"/>
    <CValidatorUnitCompareVital id="InfestorLowVitality" parent="CasterLifeLT75Percent"/>
    <CValidatorCombine id="InfestorInDanger">
        <CombineArray value="CasterInCombat"/>
        <CombineArray value="CasterLifeLT75Percent"/>
    </CValidatorCombine>
    <!--
    
    D8Charge Validation
    
    -->
    <CValidatorCombine id="D8ChargeAllUnitValidator">
        <CombineArray value="ExpertOrNotCampaign"/>
        <CombineArray value="CasterLifeGT60Percent"/>
    </CValidatorCombine>
    <CValidatorCombine id="ExpertOrNotCampaign">
        <CombineArray value="CasterDifficultyGE4"/>
        <CombineArray value="CasterNotCampaign"/>
    </CValidatorCombine>
    <CValidatorCombine id="AdvancedOrNotCampaign">
        <CombineArray value="CasterDifficultyGE3"/>
        <CombineArray value="CasterNotCampaign"/>
    </CValidatorCombine>
    <!--
    
    Buff Tests - avoid casting same spell twice
    
    -->
    <CValidatorCombine id="DiseaseTestBuff">
        <CombineArray value="noMarkers"/>
        <CombineArray value="InfestorDiseaseTestBuff"/>
    </CValidatorCombine>
    <CValidatorUnitCompareBehaviorCount id="InfestorDiseaseTestBuff"/>
    <CValidatorUnitCompareBehaviorCount id="PsiStormTestBuff"/>
    <CValidatorCombine id="HiddenCompareAB">
        <CombineArray value="IsHiddenSelf"/>
        <CombineArray value="NotHidden"/>
    </CValidatorCombine>
    <CValidatorCombine id="HiddenCompareBA">
        <CombineArray value="IsHidden"/>
        <CombineArray value="NotHiddenSelf"/>
    </CValidatorCombine>
    <CValidatorUnitFilters id="IsHiddenSelf"/>
    <CValidatorUnitFilters id="NotHiddenSelf"/>
    <CValidatorUnitCompareBehaviorCount id="NotFrenzied"/>
    <CValidatorUnitCompareBehaviorCount id="NotFungalGrowthed"/>
    <CValidatorCombine id="IsCasterLowHealthInCombatLong">
        <CombineArray value="CasterInCombatLong"/>
        <CombineArray value="CasterLifeLT20Percent"/>
    </CValidatorCombine>
    <CValidatorUnitCompareDamageTakenTime id="CasterInCombatLong"/>
</Catalog>
